---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: derivedsecrets.secrets.meln5674.github.com
spec:
  group: secrets.meln5674.github.com
  names:
    kind: DerivedSecret
    listKind: DerivedSecretList
    plural: derivedsecrets
    singular: derivedsecret
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DerivedSecret is the Schema for the derivedsecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DerivedSecretSpec defines the desired state of DerivedSecret
            properties:
              data:
                additionalProperties:
                  description: Target specifies a target field in a Secret.stringData
                    or ConfigMap.data
                  properties:
                    literal:
                      description: Literal is a literal string to set. If this is
                        in a Secret.data or ConfigMap.binaryData, this is expected
                        to be base64-encoded
                      format: byte
                      type: string
                    overwrite:
                      description: Overwrite indicates that the operator should overwrite
                        any value with the same same when updating the derived Secret
                        or ConfigMap, if false, it will be left alone
                      type: boolean
                    template:
                      description: Template is a golang text/template template to
                        evaluate using References. If this is in a Secret.data or
                        ConfigMap.binaryData, this is expected to produce base64-encoded
                        data
                      type: string
                  type: object
                description: Data is a map of keys to values that should produce base64-encoded
                  binary data (e.g. with b64enc) to include in the Secret's data Data
                  FieldSet `json:"data,omitempty"` // controller-tools doesn't work
                type: object
              prefab:
                description: Prefab is a set of common options to use instead of data/stringData
                properties:
                  copyAll:
                    description: CopyAll indicates that all keys from all references
                      should be copied verbatim, and produce an error if any keys
                      overlap
                    type: boolean
                  copyExcluding:
                    description: CopyExcluding indicates that all but the specified
                      keys in the specified references should be copied verbatim,
                      and produce an error if any keys overlap
                    items:
                      description: ReferenceSubset refers to a subset of keys in a
                        Reference
                      properties:
                        allKeys:
                          description: AllKeys indicates all keys in the Reference
                            should be considered
                          type: boolean
                        keys:
                          description: Keys is the list of keys in question Keys []ReferenceKey
                            `json:"keys,omitempty"` // controller-tools doesn't work
                          items:
                            type: string
                          type: array
                        name:
                          description: Name is the name of the Reference in question
                            Name ReferenceName `json:"name"` // controller-tools doesn't
                            work
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  copyIncluding:
                    description: CopyIncluding indicates that just the specified keys
                      in the specified references should be copied verbatim, and produce
                      an error if any keys overlap
                    items:
                      description: ReferenceSubset refers to a subset of keys in a
                        Reference
                      properties:
                        allKeys:
                          description: AllKeys indicates all keys in the Reference
                            should be considered
                          type: boolean
                        keys:
                          description: Keys is the list of keys in question Keys []ReferenceKey
                            `json:"keys,omitempty"` // controller-tools doesn't work
                          items:
                            type: string
                          type: array
                        name:
                          description: Name is the name of the Reference in question
                            Name ReferenceName `json:"name"` // controller-tools doesn't
                            work
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              references:
                description: References is a list of ConfigMaps or Secrets that can
                  be referenced in the data or stringData templates
                items:
                  description: SensitiveReference binds a Secret or ConfigMap to a
                    name that can be referenced in a template
                  properties:
                    configMapRef:
                      description: ConfigMapRef specifies a ConfigMap to use
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the ConfigMap must be defined
                          type: boolean
                      type: object
                    name:
                      description: Name is the name to reference this ConfigMap/Secret
                        Name ReferenceName `json:"name"` // controller-tools doesn't
                        work
                      type: string
                    secretRef:
                      description: SecretRef specifies a Secret to use
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret must be defined
                          type: boolean
                      type: object
                  required:
                  - name
                  type: object
                type: array
              serviceAccountName:
                description: ServiceAccountName is the name of a ServiceAccount in
                  the same Namespace as the DerivedSecret that will be used to create
                  the derived Secret Required if targetNamespace is set, and not the
                  same as the current namespace
                type: string
              stringData:
                additionalProperties:
                  description: Target specifies a target field in a Secret.stringData
                    or ConfigMap.data
                  properties:
                    literal:
                      description: Literal is a literal string to set. If this is
                        in a Secret.data or ConfigMap.binaryData, this is expected
                        to be base64-encoded
                      type: string
                    overwrite:
                      description: Overwrite indicates that the operator should overwrite
                        any value with the same same when updating the derived Secret
                        or ConfigMap, if false, it will be left alone
                      type: boolean
                    template:
                      description: Template is a golang text/template template to
                        evaluate using References. If this is in a Secret.data or
                        ConfigMap.binaryData, this is expected to produce base64-encoded
                        data
                      type: string
                  type: object
                description: StringData is a set of map of keys to templates that
                  should produce string data to include in the Secret's stringData
                  StringData FieldSet `json:"stringData,omitempty"` // controller-tools
                  doesn't work
                type: object
              targetName:
                description: TargetName is the name of the Secret to create. Defaults
                  to the same as the DerivedSecret
                type: string
              targetNamespace:
                description: TargetNamespace is the name of the Secret to create.
                  Defaults to the same as the DerivedSecret
                type: string
              targetType:
                description: TargetType is the "type" field of the derived Secret.
                  Same default as a Secret
                type: string
            required:
            - references
            type: object
          status:
            description: DerivedSecretStatus defines the observed state of DerivedSecret
            properties:
              error:
                description: Error is the error message from the last sync attempt,
                  if any
                type: string
              lastSync:
                description: LastSync is the time when the secret was last generated
                format: date-time
                type: string
              lastSyncAttempt:
                description: LastSyncAttempt is the time when the secret was last
                  attmpted to be generated
                format: date-time
                type: string
              secretName:
                description: SecretName is the name of the secret that was generated,
                  if any
                type: string
              secretNamespace:
                description: SecretNamespace is the namespace of the secret that was
                  generated, if any
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
